name: Crypto Daily Data & Simulation

on:
  schedule:
    - cron: "05 06 * * 1-5"   # 06:05 UTC lun-ven
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: crypto-daily
  cancel-in-progress: false

jobs:
  daily:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas python-dateutil requests ccxt tabulate

      - name: Fetch prices & simulate
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/fetch_and_simulate.py

      - name: Build per-asset time series CSVs
        run: |
          python scripts/build_timeseries.py

      # ---- CCXT (exchange-grade OHLCV) ----
      - name: Build CCXT mapping (CG -> pairs)
        env:
          CCXT_EXCHANGE: "kraken"                       # cambia qui (es. "binanceus", "kucoin")
          CCXT_QUOTES: "USDT,USD,FDUSD,USDC,TUSD,BTC,ETH,EUR"
          CCXT_MAX_COINS_MAP: "0"
        run: |
          python scripts/build_ccxt_map.py || true      # non bloccare se l'exchange Ã¨ down

      - name: Fetch OHLCV from CCXT
        env:
          CCXT_EXCHANGE: "kraken"
          CCXT_TIMEFRAME: "1d"
          CCXT_LIMIT: "1000"
          CCXT_MAX_COINS: "0"
        run: |
          python scripts/fetch_ohlc_ccxt.py || true

      # ---- CoinGecko (backup) ----
      - name: Fetch OHLC (CoinGecko)
        env:
          OHLC_DAYS: "365"
          OHLC_SLEEP_S: "1.2"
          OHLC_MAX_COINS: "0"
        run: |
          python scripts/fetch_ohlc.py

      - name: Apply pending orders (slippage & fees)
        env:
          SLIPPAGE_BPS: "25"
          FEE_BPS: "10"
        run: |
          python scripts/simulator.py || true

      - name: Kraken ALT scan (ranking + orders)
        env:
          MAX_MCAP_USD: "300000000"
          MIN_DOLLAR_VOL: "75000"
          RISK_PER_TRADE_BPS: "125"
          STOP_LOSS_PCT: "0.20"
          TAKE_PROFIT_PCT: "0.40"
          MAX_NEW_POS: "6"
          MAX_POSITIONS: "14"
          MAX_ALLOC_PCT: "0.10"
          MIN_ALLOC_PCT: "0.02"
        run: |
          python scripts/scan_kraken_today.py

      - name: Commit & rebase-safe push
        env:
          BRANCH: ${{ github.ref_name }}   # es. main
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/ portfolio/ reports/ data/exchange_map/ || true
          git commit -m "Daily update (CG+CCXT OHLCV, sim, NAV): $(date -u +'%Y-%m-%d')" || echo "Nothing to commit"
          git fetch origin "$BRANCH"
          git config rebase.backend merge
          git rebase -X ours "origin/$BRANCH" || (git rebase --abort && exit 1)
          git push origin HEAD:"$BRANCH"
